{"ast":null,"code":"var _jsxFileName = \"C:\\\\Switch2024\\\\MSApps\\\\online-chess-ui\\\\online-chess-ui\\\\src\\\\components\\\\game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from './Board';\nimport { Chess } from 'chess.js';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000');\nconst Game = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [squares, setSquares] = useState(Array(64).fill(null));\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\n  useEffect(() => {\n    const updateBoard = () => {\n      const board = game.board();\n      const flatBoard = board.flat().map(piece => piece ? `${piece.color}${piece.type}` : null);\n      setSquares(flatBoard);\n    };\n    updateBoard();\n    socket.on('move', move => {\n      game.move(move);\n      updateBoard();\n      setIsWhiteTurn(!isWhiteTurn);\n    });\n    return () => socket.off('move');\n  }, [game, isWhiteTurn]);\n  const handleDrop = index => {\n    const from = game.SQUARES.find((sq, idx) => idx === index);\n    const to = game.SQUARES.find((sq, idx) => idx === index);\n    if (game.move({\n      from,\n      to\n    })) {\n      socket.emit('move', {\n        from,\n        to\n      });\n      setIsWhiteTurn(!isWhiteTurn);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(Board, {\n      squares: squares,\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"60d35DekWGoYwhEaYUS9SEy3JNU=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","Chess","io","jsxDEV","_jsxDEV","socket","Game","_s","game","setGame","squares","setSquares","Array","fill","isWhiteTurn","setIsWhiteTurn","updateBoard","board","flatBoard","flat","map","piece","color","type","on","move","off","handleDrop","index","from","SQUARES","find","sq","idx","to","emit","className","children","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Switch2024/MSApps/online-chess-ui/online-chess-ui/src/components/game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Board from './Board';\r\nimport { Chess } from 'chess.js';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nconst Game = () => {\r\n  const [game, setGame] = useState(new Chess());\r\n  const [squares, setSquares] = useState(Array(64).fill(null));\r\n  const [isWhiteTurn, setIsWhiteTurn] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const updateBoard = () => {\r\n      const board = game.board();\r\n      const flatBoard = board.flat().map((piece) => (piece ? `${piece.color}${piece.type}` : null));\r\n      setSquares(flatBoard);\r\n    };\r\n\r\n    updateBoard();\r\n    socket.on('move', (move) => {\r\n      game.move(move);\r\n      updateBoard();\r\n      setIsWhiteTurn(!isWhiteTurn);\r\n    });\r\n\r\n    return () => socket.off('move');\r\n  }, [game, isWhiteTurn]);\r\n\r\n  const handleDrop = (index) => {\r\n    const from = game.SQUARES.find((sq, idx) => idx === index);\r\n    const to = game.SQUARES.find((sq, idx) => idx === index);\r\n\r\n    if (game.move({ from, to })) {\r\n      socket.emit('move', { from, to });\r\n      setIsWhiteTurn(!isWhiteTurn);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <Board squares={squares} onDrop={handleDrop} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,KAAK,QAAQ,UAAU;AAChC,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMI,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAIG,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAACc,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMiB,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,KAAK,GAAGT,IAAI,CAACS,KAAK,CAAC,CAAC;MAC1B,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAMA,KAAK,GAAG,GAAGA,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACE,IAAI,EAAE,GAAG,IAAK,CAAC;MAC7FZ,UAAU,CAACO,SAAS,CAAC;IACvB,CAAC;IAEDF,WAAW,CAAC,CAAC;IACbX,MAAM,CAACmB,EAAE,CAAC,MAAM,EAAGC,IAAI,IAAK;MAC1BjB,IAAI,CAACiB,IAAI,CAACA,IAAI,CAAC;MACfT,WAAW,CAAC,CAAC;MACbD,cAAc,CAAC,CAACD,WAAW,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAMT,MAAM,CAACqB,GAAG,CAAC,MAAM,CAAC;EACjC,CAAC,EAAE,CAAClB,IAAI,EAAEM,WAAW,CAAC,CAAC;EAEvB,MAAMa,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMC,IAAI,GAAGrB,IAAI,CAACsB,OAAO,CAACC,IAAI,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAKA,GAAG,KAAKL,KAAK,CAAC;IAC1D,MAAMM,EAAE,GAAG1B,IAAI,CAACsB,OAAO,CAACC,IAAI,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAKA,GAAG,KAAKL,KAAK,CAAC;IAExD,IAAIpB,IAAI,CAACiB,IAAI,CAAC;MAAEI,IAAI;MAAEK;IAAG,CAAC,CAAC,EAAE;MAC3B7B,MAAM,CAAC8B,IAAI,CAAC,MAAM,EAAE;QAAEN,IAAI;QAAEK;MAAG,CAAC,CAAC;MACjCnB,cAAc,CAAC,CAACD,WAAW,CAAC;IAC9B;EACF,CAAC;EAED,oBACEV,OAAA;IAAKgC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBjC,OAAA,CAACJ,KAAK;MAACU,OAAO,EAAEA,OAAQ;MAAC4B,MAAM,EAAEX;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACnC,EAAA,CArCID,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}